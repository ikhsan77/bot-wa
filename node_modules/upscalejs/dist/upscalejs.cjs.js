"use strict";var p=Object.defineProperty;var S=(b,Z,l)=>Z in b?p(b,Z,{enumerable:!0,configurable:!0,writable:!0,value:l}):b[Z]=l;var d=(b,Z,l)=>(S(b,typeof Z!="symbol"?Z+"":Z,l),l);Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var K=require("./assets/options.898fab3c.js"),G=require("canvas");const u="",i=typeof window!="undefined"&&window.Blob&&new Blob([atob(u)],{type:"text/javascript;charset=utf-8"});function I(){const b=i&&(window.URL||window.webkitURL).createObjectURL(i);try{return b?new Worker(b,{}):new Worker("data:application/javascript;base64,"+u,{type:"module"})}finally{b&&(window.URL||window.webkitURL).revokeObjectURL(b)}}class y{constructor(Z){d(this,"options");d(this,"created_workers",0);d(this,"workers",[]);d(this,"waitingForWorker",[]);this.options=Object.assign(K.defaultOptions,Z)}async getWorker(){return new Promise(Z=>{const l=this.workers.shift();if(l){Z(l);return}this.waitingForWorker.push(Z)})}putWorker(Z){const l=this.waitingForWorker.shift();if(l){l(Z);return}this.workers.push(Z)}terminate(){this.workers.map(Z=>Z.terminate()),this.workers=[],this.created_workers=0}}class Y extends y{constructor(Z){super(Z)}async upscale(Z){this.created_workers<this.options.maxWorkers&&(this.created_workers++,this.workers.push(new h(this.options)));const l=await this.getWorker(),X=await l.upscale(Z);return this.putWorker(l),X}}class h extends y{constructor(Z){super(Z);d(this,"id",0);d(this,"canvas",G.createCanvas(0,0));d(this,"pending",new Map);d(this,"resolve")}onmessage(Z){var W;const{id:l,upscaled:X}=Z.data;if(!J(X))throw Error("expected upscaled to be an 'ImageData'");const m=this.pending.get(l);if(!m)throw Error("upscaled result is not pending");if(this.canvas.getContext("2d").putImageData(X,m.x,m.y),this.pending.delete(l),this.pending.size==0){const V=this.canvas.getContext("2d").getImageData(0,0,this.canvas.width,this.canvas.height);(W=this.resolve)==null||W.call(this,Promise.resolve(V))}}async upscale(Z){return new Promise(l=>{this.resolve=l,this.canvas=G.createCanvas(Z.width*2,Z.height*2),K.canvasListFromImageData(Z).forEach(async m=>{const W=this.id++;if(this.pending.set(W,m),this.created_workers<this.options.maxInternalWorkers){this.created_workers++;const c=new I;c.onmessage=this.onmessage.bind(this),this.workers.push(c)}const V=await this.getWorker();V.postMessage({id:W,image:m.element.getContext("2d").getImageData(0,0,200,200),denoiseModel:this.options.denoiseModel,base:this.options.base}),this.putWorker(V)})})}}const J=b=>{const Z=b;return Z.width>0&&Z.height>0};var R={Upscaler:Y};exports.Upscaler=Y;exports.default=R;
